<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Vishal Chauhan</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Vishal Chauhan</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 28 Feb 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Blog Web App</title>
            <link>/posts/2020/02/blog-web-app/</link>
            <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
            
            <guid>/posts/2020/02/blog-web-app/</guid>
            <description>Introduction This is a first Python project I made and it was a fun experience. So, it is a basic blog website created using Flask and SQLite. Thousands of improvements can be done to make it more useful. The code is very concise and understandable. You can take a look at it.
Here&amp;rsquo;s the app.py file:
from flask import Flask, render_template, request, redirect, url_for from flask_sqlalchemy import SQLAlchemy from datetime import datetime app = Flask(__name__) app.</description>
            <content type="html"><![CDATA[

<h2 id="introduction">Introduction</h2>

<p>This is a first Python project I made and it was a fun experience. So, it is a basic blog website created using Flask and SQLite. Thousands of improvements can be done to make it more useful. The code is very concise and understandable. You can take a look at it.</p>

<p>Here&rsquo;s the app.py file:</p>

<pre><code>from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy 
from datetime import datetime

app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////home/vishal/python/projects/flask_blog-master/blog.db'

db = SQLAlchemy(app)

class Blogpost(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(50))
    subtitle = db.Column(db.String(50))
    author = db.Column(db.String(20))
    date_posted = db.Column(db.DateTime)
    content = db.Column(db.Text)

@app.route('/')
def index():
    posts = Blogpost.query.order_by(Blogpost.date_posted.desc()).all()

    return render_template('index.html', posts=posts)

@app.route('/about')
def about():
    return render_template('about.html')

@app.route('/post/&lt;int:post_id&gt;')
def post(post_id):
    post = Blogpost.query.filter_by(id=post_id).one()

    return render_template('post.html', post=post)

@app.route('/add')
def add():
    return render_template('add.html')

@app.route('/addpost', methods=['POST'])
def addpost():
    title = request.form['title']
    subtitle = request.form['subtitle']
    author = request.form['author']
    content = request.form['content']

    post = Blogpost(title=title, subtitle=subtitle, author=author, content=content, date_posted=datetime.now())

    db.session.add(post)
    db.session.commit()

    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
</code></pre>
]]></content>
        </item>
        
    </channel>
</rss>
